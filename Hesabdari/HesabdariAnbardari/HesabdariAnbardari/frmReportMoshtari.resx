<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonX1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>